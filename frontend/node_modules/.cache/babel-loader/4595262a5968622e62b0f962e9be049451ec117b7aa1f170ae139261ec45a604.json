{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\perscholas\\\\2024-RTT-03\\\\SBA320\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\";\nimport React, { createContext } from \"react\";\nimport all_product from \"../Components/Assets/all_product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst ShopContextProvider = props => {\n  const contextValue = {\n    products: all_product\n  }; // Assign all_product directly to products\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = ShopContextProvider;\nexport default ShopContextProvider;\n/*\r\nimport React, { createContext} from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n\r\n  const contextValue = {all_product};\r\n\r\n  console.log(contextValue)\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider> \r\n  )\r\n\r\n}\r\n\r\nexport default ShopContextProvider;\r\n*/\n\n/*\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n\r\n  const [products,setProducts] = useState([]);\r\n  \r\n  const getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let i = 0; i < 300; i++) {\r\n      cart[i] = 0;\r\n    }\r\n    return cart;\r\n  };\r\n\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/allproducts') \r\n          .then((res) => res.json()) \r\n          .then((data) => setProducts(data))\r\n\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/getcart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify(),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {setCartItems(data)});\r\n    }\r\n\r\n}, [])\r\n  \r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo = products.find((product) => product.id === Number(item));\r\n        totalAmount += cartItems[item] * itemInfo.new_price;\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        totalItem += cartItems[item];;\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/addtocart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify({\"itemId\":itemId}),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {console.log(data)});\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/removefromcart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify({\"itemId\":itemId}),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {console.log(data)});\r\n    }\r\n  };\r\n\r\n  const contextValue = {products, getTotalCartItems, cartItems, addToCart, removeFromCart, getTotalCartAmount };\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","all_product","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","contextValue","products","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/perscholas/2024-RTT-03/SBA320/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext} from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const contextValue = { products: all_product }; // Assign all_product directly to products\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider> \r\n  );\r\n}\r\n\r\nexport default ShopContextProvider;\r\n/*\r\nimport React, { createContext} from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n\r\n  const contextValue = {all_product};\r\n\r\n  console.log(contextValue)\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider> \r\n  )\r\n\r\n}\r\n\r\nexport default ShopContextProvider;\r\n*/\r\n\r\n/*\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n\r\n  const [products,setProducts] = useState([]);\r\n  \r\n  const getDefaultCart = () => {\r\n    let cart = {};\r\n    for (let i = 0; i < 300; i++) {\r\n      cart[i] = 0;\r\n    }\r\n    return cart;\r\n  };\r\n\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/allproducts') \r\n          .then((res) => res.json()) \r\n          .then((data) => setProducts(data))\r\n\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/getcart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify(),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {setCartItems(data)});\r\n    }\r\n\r\n}, [])\r\n  \r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo = products.find((product) => product.id === Number(item));\r\n        totalAmount += cartItems[item] * itemInfo.new_price;\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        totalItem += cartItems[item];;\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/addtocart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify({\"itemId\":itemId}),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {console.log(data)});\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n    if(localStorage.getItem(\"auth-token\"))\r\n    {\r\n      fetch('http://localhost:4000/removefromcart', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept:'application/form-data',\r\n        'auth-token':`${localStorage.getItem(\"auth-token\")}`,\r\n        'Content-Type':'application/json',\r\n      },\r\n      body: JSON.stringify({\"itemId\":itemId}),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {console.log(data)});\r\n    }\r\n  };\r\n\r\n  const contextValue = {products, getTotalCartItems, cartItems, addToCart, removeFromCart, getTotalCartAmount };\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n*/"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAO,OAAO;AAC3C,OAAOC,WAAW,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMK,mBAAmB,GAAIC,KAAK,IAAK;EACrC,MAAMC,YAAY,GAAG;IAAEC,QAAQ,EAAEP;EAAY,CAAC,CAAC,CAAC;EAChD,oBACEE,OAAA,CAACC,WAAW,CAACK,QAAQ;IAACC,KAAK,EAAEH,YAAa;IAAAI,QAAA,EACvCL,KAAK,CAACK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAAC,EAAA,GAPKX,mBAAmB;AASzB,eAAeA,mBAAmB;AAClignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}